name: Security Scan with Trivy & Hadolint

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write  # Required permission to update SECURITY.md

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-assume pytest-benchmark locust bandit safety flake8 mypy

      - name: ðŸ“¥ Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
      
      - name: Install Hadolint
        run: |
          wget -O hadolint https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
          if [ ! -s hadolint ]; then
            echo "Error: Failed to download Hadolint binary"
            exit 1
          fi
          chmod +x hadolint
          sudo mv hadolint /usr/local/bin/
        
      #  Security analysis before running tests
      - name: Perform security check with Bandit
        run: bandit -r . || echo "Bandit found security issues, review the logs."
      
      - name: Check dependencies for vulnerabilities with Safety
        run: safety check -r requirements.txt
      
      - name: Check code quality with Flake8
        run: flake8 . || echo "Flake8 found formatting issues. Check the logs."
      
      - name: Check type consistency with Mypy
        run: mypy . || echo "Mypy found type inconsistencies. Check the logs."
      
      # Run unit and performance tests
      - name: Run unit tests
        run: pytest tests --disable-warnings || echo "Tests failed, but the workflow will continue."
      
      - name: Run performance tests
        run: pytest --benchmark-only
      
      # Start Flask application before running load tests
      - name: Start Flask app
        run: |
          python app.py &  # Run Flask in the background
          sleep 5  # Wait to ensure the app is running
      
      # Run load tests with Locust
      - name: Run load tests with Locust
        run: locust -f load_tests/locustfile.py --headless -u 50 -r 5 --run-time 1m
      
      # Security and linting for Docker
      - name: Lint Dockerfile with Hadolint
        run: hadolint Dockerfile || echo "Hadolint found issues, check the logs."

      - name: Build Docker Image
        run: docker build -t my-docker-image .

      - name: Scan Docker image for vulnerabilities with Trivy
        run: trivy image my-docker-image