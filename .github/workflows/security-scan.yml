name: Security Scan with Trivy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write  # Permiso necesario para actualizar SECURITY.md

jobs:
  security_scan:
    name: 🔍 Security Scan and Update SECURITY.md
    runs-on: ubuntu-latest

    steps:
      - name: 🛠️ Checkout Repo
        uses: actions/checkout@v4

      - name: 📥 Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
      

      - name: 🔨 Build Docker Image (Python 3)
        run: |
          docker build -t python-app:latest .

      - name: 🛡 Run Trivy Scan (Generate JSON Report)
        run: |
          trivy image --format json -o trivy-results.json python-app:latest

      - name: 📝 Update SECURITY.md
        run: |
          echo "# Security Report" > SECURITY.md
          echo "" >> SECURITY.md
          echo "## Última Actualización" >> SECURITY.md
          echo "\`$(date +"%d/%m/%Y")\`" >> SECURITY.md
          echo "" >> SECURITY.md
          echo "## Vulnerabilidades Detectadas" >> SECURITY.md
          echo "| Severidad  | Tipo          | Descripción                           | Recurso Afectado          |" >> SECURITY.md
          echo "|------------|---------------|---------------------------------------|---------------------------|" >> SECURITY.md
          jq -r '.Results[].Vulnerabilities[] | 
            select(.Severity) |
            {"CRITICAL": 1, "HIGH": 2, "MEDIUM": 3, "LOW": 4, "UNKNOWN": 5 }[.Severity] as $order |
            [.Severity, .VulnerabilityID, .Title, .PkgName, $order] |
            @csv' trivy-results.json | sort -t, -k5,5n | awk -F',' '{print "| " $1 " | " $2 " | " $3 " | " $4 " |"}' >> SECURITY.md
          echo "" >> SECURITY.md
          echo "## Nota" >> SECURITY.md
          echo "Estas vulnerabilidades son generadas automáticamente mediante Trivy." >> SECURITY.md
        